(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0)})([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);class Tabs{constructor(tabButtons,tabs){this.tabButtons=tabButtons;this.tabs=tabs;this.tabButtons.forEach((elem,i)=>{elem.addEventListener("click",()=>{this.closeAllTabs();this.tabs[i].classList.add("active");elem.classList.add("active")})})}closeAllTabs(){this.tabButtons.forEach(button=>{button.classList.remove("active")});this.tabs.forEach(tab=>{tab.classList.remove("active")})}}new Tabs(document.querySelectorAll(".tab-buttons .tab"),document.querySelectorAll(".tabs .tab"));if(document.querySelector(".how-we-do-it .image-block")){let imageBlock=document.querySelector(".how-we-do-it .image-block"),imageList=imageBlock.querySelector("ol"),canvas=imageBlock.querySelector("canvas"),widthStatic=1250,heightStatic=650,paddingString,widthMark;canvas.width=widthStatic;canvas.height=heightStatic;let step={0:"62",1366:"82"};for(let width in step){if(window.screen.width<=width){break}else{widthMark=step[width]}}imageBlock.querySelectorAll(".image-field").forEach((elem,index)=>{let round=document.createElement("span");round.classList.add("mark");if(window.screen.width>1023){imageList.appendChild(round)}else{imageBlock.querySelector(".main-image").appendChild(round)}let markX=parseInt(elem.dataset.posX),markY=parseInt(elem.dataset.posY);if(window.screen.width>1023){elem.style.top=`calc(${markY*100/heightStatic}% + ${Math.round(widthMark*.78)}px)`;elem.style.left=`${markX*100/widthStatic}%`}else{round.innerText=`${index+1}`}round.style.top=`${markY*100/heightStatic}%`;round.style.left=`${markX*100/widthStatic}%`;let elemHeight=parseInt(window.getComputedStyle(elem).getPropertyValue("height"));elem.style.height="0";elem.style.padding=`0 15px 0 20px`;round.addEventListener("click",()=>{document.querySelectorAll(".how-we-do-it .image-block .image-field").forEach(field=>{if(field!==elem){field.style.height="0";field.style.padding=`0 15px 0 20px`}});document.querySelectorAll(".how-we-do-it .image-block .mark").forEach(mark=>{if(mark!==round){mark.classList.remove("active")}});if(parseInt(elem.style.height)===0){round.classList.add("active");elem.style.height=`${elemHeight}px`;elem.style.padding=`25px 15px 25px 20px`}else{round.classList.remove("active");elem.style.height="0";elem.style.padding=`0 15px 0 20px`}})})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
